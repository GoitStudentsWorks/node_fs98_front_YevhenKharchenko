{"version":3,"file":"ResetPasswordPage-BAJ1fhcp.js","sources":["../../src/components/ResetPasswordForm/ResetPasswordForm.jsx","../../src/pages/ResetPasswordPage/ResetPasswordPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport css from './ResetPasswordForm.module.css';\nimport sprite from '../../assets/icons/sprite.svg';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst ResetPasswordForm = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const tokenFromUrl = queryParams.get('token');\n    setToken(tokenFromUrl);\n  }, [location]);\n\n  const validationSchema = Yup.object().shape({\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .required('Password is required'),\n    repeatPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Repeat password is required'),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async data => {\n    try {\n      const response = await axios.post('https://project6-back.onrender.com/users/reset-password', {\n        token,\n        password: data.password,\n      });\n\n      if (response.status === 200) {\n        toast.success(`Password reset successful`, {\n          duration: 4000,\n          position: 'top-center',\n          style: {\n            textAlign: 'center',\n            boxShadow: '8px 11px 27px -8px rgba(66, 68, 90, 1)',\n          },\n        });\n        reset();\n        navigate('/signin');\n      } else {\n        toast.error(`Something went wrong. Please try again.`, {\n          duration: 4000,\n          position: 'top-center',\n          style: {\n            textAlign: 'center',\n            boxShadow: '8px 11px 27px -8px rgba(66, 68, 90, 1)',\n          },\n        });\n      }\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || error.message;\n      toast.error(`Error: ${errorMessage}`, {\n        duration: 4000,\n        position: 'top-center',\n        style: {\n          textAlign: 'center',\n          boxShadow: '8px 11px 27px -8px rgba(66, 68, 90, 1)',\n        },\n      });\n    }\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRepeatPasswordVisibility = () => {\n    setShowRepeatPassword(!showRepeatPassword);\n  };\n\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <h2 className={css.header}>Change the password</h2>\n\n        <div className={css.formGroupPassword}>\n          <label className={css.label}>New password:</label>\n          <div className={css.inputWrapper}>\n            <input\n              className={`${css.input} ${errors.password ? css.error : ''}`}\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              {...register('password')}\n            />\n            <svg\n              className={css.passwordToggleIcon}\n              onClick={togglePasswordVisibility}\n              width=\"20px\"\n              height=\"20px\"\n            >\n              <use xlinkHref={`${sprite}#${showPassword ? 'eye' : 'eye-off'}`} />\n            </svg>\n          </div>\n          {errors.password && <p className={css.errorMessage}>{errors.password.message}</p>}\n        </div>\n\n        <div className={css.formGroupPassword}>\n          <label className={css.label}>Repeat new password:</label>\n          <div className={css.inputWrapper}>\n            <input\n              className={`${css.input} ${errors.repeatPassword ? css.error : ''}`}\n              type={showRepeatPassword ? 'text' : 'password'}\n              placeholder=\"Repeat password\"\n              name=\"repeatPassword\"\n              {...register('repeatPassword')}\n            />\n            <svg\n              className={css.passwordToggleIcon}\n              onClick={toggleRepeatPasswordVisibility}\n              width=\"20px\"\n              height=\"20px\"\n            >\n              <use xlinkHref={`${sprite}#${showRepeatPassword ? 'eye' : 'eye-off'}`} />\n            </svg>\n          </div>\n          {errors.repeatPassword && (\n            <p className={css.errorMessage}>{errors.repeatPassword.message}</p>\n          )}\n        </div>\n\n        <div className={css.buttonWrapper}>\n          <button className={css.submitButton} type=\"submit\">\n            Change\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPasswordForm;\n","import AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\nimport Logo from '../../components/Logo/Logo';\nimport ResetPasswordForm from '../../components/ResetPasswordForm/ResetPasswordForm';\nimport DocumentTitle from '../../components/DocumentTitle';\nimport css from './ResetPasswordPage.module.css';\nimport { useEffect, useState } from 'react';\n\nconst ResetPasswordPage = () => {\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <div className={css.wrapper}>\n      <DocumentTitle>Aqua Track - Reset Password</DocumentTitle>\n      <div className={css.backdrop}>\n        <Logo />\n        <ResetPasswordForm />\n      </div>\n      {isWideScreen && <AdvantagesSection />}\n    </div>\n  );\n};\n\nexport default ResetPasswordPage;\n"],"names":["ResetPasswordForm","navigate","useNavigate","location","useLocation","token","setToken","useState","useEffect","tokenFromUrl","validationSchema","Yup.object","Yup.string","Yup.ref","register","handleSubmit","errors","reset","useForm","yupResolver","onSubmit","data","axios","toast","error","errorMessage","_b","_a","showPassword","setShowPassword","showRepeatPassword","setShowRepeatPassword","togglePasswordVisibility","toggleRepeatPasswordVisibility","jsx","css","jsxs","sprite","ResetPasswordPage","isWideScreen","setIsWideScreen","handleResize","DocumentTitle","Logo","AdvantagesSection"],"mappings":"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"}