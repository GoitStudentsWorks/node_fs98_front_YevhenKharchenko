{"version":3,"file":"SignUpPage-BvwzhbYs.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { NavLink, useNavigate  } from 'react-router-dom';\nimport css from './SignUpForm.module.css';\nimport sprite from '../../assets/icons/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../redux/auth/operations';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport toast from 'react-hot-toast';\nimport GoogleAuth from '../GoogleAuth/GoogleAuth';\n\nconst SignUpForm = () => {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string()\n    .email('Invalid email format')\n    .matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$/, 'Invalid email format')\n    .required('Email is required'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .required('Password is required'),\n    repeatPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Repeat password is required'),\n  });\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset, \n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = (data) => {\n    dispatch(\n      registerUser({\n        email: data.email,\n        password: data.password,\n      })\n    );\n    toast.success(`Successfully created user!`, {\n      duration: 4000,\n      position: 'top-center',\n      style: {\n        textAlign: 'center',\n        boxShadow: '8px 11px 27px -8px rgba(66, 68, 90, 1)',\n      },\n    });\n    reset();\n    navigate('/signin');\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRepeatPasswordVisibility = () => {\n    setShowRepeatPassword(!showRepeatPassword);\n  };\n\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <h2 className={css.header}>Sign Up</h2>\n\n        <div className={css.formGroup}>\n          <label className={css.label}>Email:</label>\n          <div className={css.inputWrapper}>\n            <input\n              className={`${css.input} ${errors.email ? css.error : ''}`}\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              {...register('email')}\n            />\n          </div>\n          {errors.email && <p className={css.errorMessage}>{errors.email.message}</p>}\n        </div>\n\n        <div className={css.formGroupPassword}>\n          <label className={css.label}>Password:</label>\n          <div className={css.inputWrapper}>\n            <input\n              className={`${css.input} ${errors.password ? css.error : ''}`}\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Enter your password\"\n              {...register('password')}\n            />\n            <svg\n              className={css.passwordToggleIcon}\n              onClick={togglePasswordVisibility}\n              width=\"20px\"\n              height=\"20px\"\n            >\n              <use xlinkHref={`${sprite}#${showPassword ? 'eye' : 'eye-off'}`} />\n            </svg>\n          </div>\n          {errors.password && <p className={css.errorMessage}>{errors.password.message}</p>}\n        </div>\n\n        <div className={css.formGroupPassword}>\n          <label className={css.label}>Repeat Password:</label>\n          <div className={css.inputWrapper}>\n            <input\n              className={`${css.input} ${errors.repeatPassword ? css.error : ''}`}\n              type={showRepeatPassword ? 'text' : 'password'}\n              placeholder=\"Repeat password\"\n              {...register('repeatPassword')}\n            />\n            <svg\n              className={css.passwordToggleIcon}\n              onClick={toggleRepeatPasswordVisibility}\n              width=\"20px\"\n              height=\"20px\"\n            >\n              <use xlinkHref={`${sprite}#${showRepeatPassword ? 'eye' : 'eye-off'}`} />\n            </svg>\n          </div>\n          {errors.repeatPassword && (\n            <p className={css.errorMessage}>{errors.repeatPassword.message}</p>\n          )}\n        </div>\n\n        <div className={css.buttonWrapper}>\n          <button className={css.submitButton} type=\"submit\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n      <GoogleAuth linkText={\"Sign up with Google\"}/>\n      <div className={css.textWrapper}>\n        Already have an account?\n        <NavLink className={css.link} to=\"/signin\">\n          Sign In\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import { useEffect, useState } from 'react';\nimport Logo from '../../components/Logo/Logo';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport css from './SignUpPage.module.css';\nimport AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\nimport DocumentTitle from '../../components/DocumentTitle';\n\nconst SignUpPage = () => {\n  const [isWideScreen, setIsWideScreen] = useState(window.innerWidth >= 1440);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsWideScreen(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return (\n    <div className={css.wrapper}>\n      <DocumentTitle>Aqua Track - Register</DocumentTitle>\n      <div className={css.backdrop}>\n        <Logo />\n        <SignUpForm />\n      </div>\n      {isWideScreen && <AdvantagesSection />}\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["SignUpForm","dispatch","useDispatch","navigate","useNavigate","validationSchema","Yup.object","Yup.string","Yup.ref","register","handleSubmit","errors","reset","useForm","yupResolver","onSubmit","data","registerUser","toast","showPassword","setShowPassword","useState","showRepeatPassword","setShowRepeatPassword","togglePasswordVisibility","toggleRepeatPasswordVisibility","jsxs","css","jsx","sprite","GoogleAuth","NavLink","SignUpPage","isWideScreen","setIsWideScreen","useEffect","handleResize","DocumentTitle","Logo","AdvantagesSection"],"mappings":"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"}